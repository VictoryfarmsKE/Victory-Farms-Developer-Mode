[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-04-11 12:47:49.920885",
  "module": "VictoryFarmsDeveloper",
  "name": "PO Requistion Forms",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Purchase Order",
  "script": "# Create a set of unique custom requisitions from doc items\nrequisition_set = set(item.custom_requisition for item in doc.items if item.custom_requisition)\n\n# Clear the custom_connected_requisitions list in the document\ndoc.custom_connected_requisitions = []\n\n# Append each unique requisition to custom_connected_requisitions\nfor req in requisition_set:\n    doc.append(\"custom_connected_requisitions\", {\"requisition\": req})",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "delete_draft_invoices_worker",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-04-02 09:18:07.409559",
  "module": "VictoryFarmsDeveloper",
  "name": "Deleting Draft Invoices API",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "batch_size = 50\r\ndraft_invoices = frappe.get_all(\"Sales Invoice\", filters={\"docstatus\": 0}, fields=[\"name\"], limit=batch_size)\r\n\r\nif not draft_invoices:\r\n    frappe.log_error(\"No more draft invoices to delete.\", \"No more draft invoices to delete\")\r\nelse:\r\n    for invoice in draft_invoices:\r\n        frappe.delete_doc(\"Sales Invoice\", invoice.name, force=True)\r\n\r\n    frappe.db.commit()\r\n    frappe.enqueue(\"delete_draft_invoices_worker\", queue=\"long\", is_async=True)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-04-02 09:18:16.287812",
  "module": "VictoryFarmsDeveloper",
  "name": "Deleting Draft Invoices",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "frappe.enqueue(\"delete_draft_invoices_worker\", queue=\"long\", is_async=True)",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-06-10 19:45:23.534259",
  "module": "VictoryFarmsDeveloper",
  "name": "Purchase Invoice Description",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Purchase Order",
  "script": "for item in doc.items:\r\n    item.description = \"\"\r\n    if item.custom_item_description:\r\n        item.description = item.custom_item_description\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-06-12 20:37:05.634935",
  "module": "VictoryFarmsDeveloper",
  "name": "Employee Document Folder Create",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee",
  "script": "folders = [\"Employment\", \"Disciplinary\", \"Performance Management\", \"Payroll Administration\"]\r\nparent_folder = f\"Home/Employee Documents/{doc.name}\"\r\n\r\n# Ensure root employee folder exists\r\nif not frappe.db.exists(\"File\", {\"file_name\": doc.name, \"folder\": \"Home/Employee Documents\", \"is_folder\": 1}):\r\n    frappe.get_doc({\r\n        \"doctype\": \"File\",\r\n        \"file_name\": doc.name,\r\n        \"folder\": \"Home/Employee Documents\",\r\n        \"is_folder\": 1,\r\n        \"is_private\": 1\r\n    }).insert(ignore_permissions=True)\r\n\r\n# Create subfolders\r\nfor folder in folders:\r\n    if not frappe.db.exists(\"File\", {\"file_name\": folder, \"folder\": parent_folder, \"is_folder\": 1}):\r\n        frappe.get_doc({\r\n            \"doctype\": \"File\",\r\n            \"file_name\": folder,\r\n            \"folder\": parent_folder,\r\n            \"is_folder\": 1,\r\n            \"is_private\": 1\r\n        }).insert(ignore_permissions=True)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-06-12 20:36:41.707423",
  "module": "VictoryFarmsDeveloper",
  "name": "Employee Documents Permissions",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "File",
  "script": "hr_roles = [\"HR Manager\", \"HR Assistant\", \"Payroll Officer\"]\r\n\r\nuser_roles = [r.role for r in frappe.get_all(\"Has Role\", filters={\"parent\": frappe.session.user}, fields=[\"role\"])]\r\n\r\n# Check if the user has any HR role\r\nif not set(hr_roles).intersection(user_roles):\r\n    condition = \"`tabFile`.`folder` NOT LIKE 'Home/Employee Documents%'\"\r\nelse:\r\n    condition = \"1=1\"\r\n\r\ncondition\r\n",
  "script_type": "Permission Query"
 }
]